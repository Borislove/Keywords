import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

public class ListenerNavi extends MouseAdapter {

    protected static String str = " ";

    @Override
    public void mouseClicked(MouseEvent ev) {
        //TextWindow.textArea.setText(Navi.listMenu.getSelectedValue());

        switch (Navi.listMenu.getSelectedValue()) {


            //----------------------------------------------------//
            case "abstract":
                str = "Модификатор, указывающий на то, что подробности класса," +
                        "\nметода или интерфейса должны быть реализованы в другом месте кода";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "assert":
                str = "Проверка истинности условия в процессе отладки программы";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "boolean":
                str = "Примитивный булев тип, имеющий два значения: true и false";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "break":
                str = "Выход из блока switch или из любого цикла";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "byte":
                str = "Примитивный тип; целое число длиной 8 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "case":
                str = "Метка маршрута выполнения в блоке switch";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "catch":
                str = "Блок, выполняющийся при исключении в блоке try";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "char":
                str = "Примитивный тип переменной, содержащей символ\n в формате UTF-16";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "class":
                str = "Определение класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "const":
                str = "В Java нельзя использовать это ключевое слово;\n" +
                        "нельзя также объявить переменную с именем const;\n" +
                        "константу можно создать с помощью ключевого слова final";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "continue":
                str = "Принудительное завершение текущей итерации\n" +
                        "цикла и выполнение следующей итерации сначала";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "default":
                str = "Маршрут выполнения в блоке switch, выбираемый, когда\n" +
                        "управляющая переменная не равна ни одному варианту case";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "do":
                str = "Бесконечный цикл; может быть завершен оператором break\n" +
                        "или с помощью условия while";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "double":
                str = "Примитивный тип; число с плавающей точкой длиной 64 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "else":
                str = "Заголовок блока, расположенного после блока if\n" +
                        "и выполняющегося, если условие равно false";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "enum":
                str = "Специальный тип; переменная, которая может принимать\n" +
                        "только ограниченный набор именованных значений";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "extends":
                str = "Объявление базового класса в заголовке производного класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "false":
                str = "ЛОЖЬ; одно из двух булевых значений";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "final":
                str = "Модификатор, означающий, что значение переменной\n" +
                        "не может быть изменено, класс не может быть базовым\n" +
                        "или метод не может быть переопределен";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "finally":
                str = "Блок, выполняющийся после блока try в любом случае,\n" +
                        "независимо от того, было ли сгенерировано исключение\n" +
                        "(однако, если завершается поток try или закрывается процесс\n" +
                        "виртуальной машины Java, блок finally может быть пропущен)";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "float":
                str = "Примитивный тип; число с плавающей точкой длиной 32 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "for":
                str = "Цикл, определяемый тремя инструкциями\n" +
                        " - начальным значением счетчика,\n" +
                        " - условием выполнения\n" +
                        " - приращением счетчика";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "goto":
                str = "В Java использование этого ключевого слова запрещено;\n" +
                        "однако, посколько это все же ключевое слово,\n" +
                        "его нельзя использовать в качестве идентификатора";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "if":
                str = "Условие ветвления программы";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "implements":
                str = "Объявление интерфейса в заголовке класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "import":
                str = "Задание имен пакетов и классов,\n" +
                        "позволяющее сокращать имена в коде";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "instanceof":
                str = "Проверка, является ли объект экземпляром класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "int":
                str = "Примитивный тип; целое число длиной 32 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "interface":
                str = "Определение интерфейса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "long":
                str = "Примитивный тип; целое число длиной 64 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "native":
                str = "Позволяет программисту использовать код,\n" +
                        "написанный на дугом языке(на любом из языков, отличных от Java)";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "new":
                str = "Создание экземпляра класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "null":
                str = "Значение \"пусто\"; отсутсвие значения; неопределенное значение";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "package":
                str = "Группа логически связанных классов, обладающих общими именами";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "private":
                str = "Модификатор доступа, ограничивающий область видимости\nрамками класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "protected":
                str = "Модификатор доступа, ограничивающий область видимости\nрамками текущего класса и всех производных классов";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "public":
                str = "Модификатор доступа, не ограничивающий область видимости";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "return":
                str = "Завершение выполнения метода и, возможно, возврат значения";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "short":
                str = "Примитивный тип; целое число длиной 16 бит";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "static":
                str = "Модификатор, определяющий принадлежность поля\nили метода классу, а не экземпляру класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "strictfp":
                str = "Ограничение представления слишком больших или малых чисел\n" +
                        "типа float и double при выполении промежуточных вычислений";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "super":
                str = "Ссылка на базовый класс; вызов конструктора базового класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "switch":
                str = "Выбор маршрута выполнения кода в зависимости\n" +
                        "от значения управляющей переменной";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "synchronized":
                str = "Синхронизация двух потоков";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "this":
                str = "Ссылка на текущий экземпляр класса";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "throw":
                str = "Генерация исключения";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "throws":
                str = "Указывает на то, что метод может передавать\n" +
                        "необработанные исключения выше по стеку вызовов";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "transient":
                str = "Указывает на то, что при сериализации объекта\n" +
                        "значение переменной можно не сохранять";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "true":
                str = "ИСТИНА; одно из двух булевых значений";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "try":
                str = "Защищенный блок инструкций; защищенность означает, что\n" +
                        "возникшее исключение будет обработано";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "void":
                str = "Спецификатор метода, сообщающий о том, что\n" +
                        "метод не возвращает никакого значения";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "volatile":
                str = "Определение правил использования переменной\n" +
                        "в нескольких потоках одновременно";
                TextWindow.textArea.setText(str);
                break;
            //----------------------------------------------------//
            case "while":
                str = "Одна из разновидностей циклов;\n" +
                        "повторение выполнения блока инструкций при истинности условия";
                TextWindow.textArea.setText(str);
                break;


            default:
                TextWindow.textArea.setText(Navi.listMenu.getSelectedValue());
                break;
        }
    }
}
